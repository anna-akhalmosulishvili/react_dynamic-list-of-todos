{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","isSelected","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","searchInput","selectedFilter","onFilterChange","onSearchInputChange","onClearSearch","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoId","onClose","find","el","useState","loading","setLoading","user","setUser","useEffect","userId","finally","href","name","App","setTodos","selectedTodoId","setSelectedTodoId","setSelectedFilter","setSearchInput","filteredTodos","filter","trim","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d23de37.chunk.js","sourcesContent":["import React from 'react';\n\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelect: (todo: Todo) => void,\n  isSelected: number,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelect, isSelected }) => {\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onSelect(todo);\n                  }}\n                >\n                  <span\n                    className=\"icon\"\n                  >\n                    <i\n                      className={classNames({\n                        'far fa-eye':\n                          isSelected === 0 || isSelected !== todo.id,\n                        'far fa-eye-slash': isSelected === todo.id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  searchInput: string,\n  selectedFilter: string,\n  onFilterChange: (filter: string) => void,\n  onSearchInputChange: (value: string) => void,\n  onClearSearch: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchInput,\n  selectedFilter,\n  onFilterChange,\n  onSearchInputChange,\n  onClearSearch,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(e) => onFilterChange(e.target.value)}\n          >\n\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchInput}\n          onChange={(e) => onSearchInputChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchInput && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearSearch}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todos, todoId, onClose }) => {\n  const todo = todos.find(el => el.id === todoId);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    if (todo) {\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [todoId]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading && (\n        <Loader />\n      )}\n\n      {!loading && (\n        <div\n          className=\"modal-card\"\n        >\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !todo?.completed,\n                  'has-text-success': todo?.completed,\n                })}\n              >\n                {(todo?.completed) ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n\n    </div>\n\n  // <div\n  //   className=\"modal is-active\"\n  //   data-cy=\"modal\"\n  // >\n  //   <div className=\"modal-background\" />\n\n  //   {loading && !user ? (\n  //     <Loader />\n  //   ) : (\n  //     <div\n  //       className=\"modal-card\"\n  //     >\n  //       <header className=\"modal-card-head\">\n  //         <div\n  //           className=\"modal-card-title has-text-weight-medium\"\n  //           data-cy=\"modal-header\"\n  //         >\n  //           {`Todo #${todo?.id}`}\n  //         </div>\n\n  //         {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n  //         <button\n  //           type=\"button\"\n  //           className=\"delete\"\n  //           data-cy=\"modal-close\"\n  //           onClick={() => {\n\n  //           }}\n  //         />\n  //       </header>\n\n  //       <div className=\"modal-card-body\">\n  //         <p className=\"block\" data-cy=\"modal-title\">\n  //           {todo?.title}\n  //         </p>\n\n  //         <p className=\"block\" data-cy=\"modal-user\">\n  //           <strong\n  //             className={classNames({\n  //               'has-text-danger': !todo?.completed,\n  //               'has-text-success': todo?.completed,\n  //             })}\n  //           >\n  //             {(todo?.completed) ? 'Done' : 'Planned'}\n  //           </strong>\n\n  //           {' by '}\n\n  //           <a href=\"mailto:Sincere@april.biz\">\n  //             {user?.name}\n  //           </a>\n  //         </p>\n  //       </div>\n  //     </div>\n  //   )}\n  // </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then((setTodos))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedFilter(selectedFilter);\n    setSelectedTodoId(todo.id);\n  };\n\n  const handleModalClosing = () => {\n    setSelectedTodoId(0);\n  };\n\n  const handleSearchInputChange = (value: string) => {\n    setSearchInput(value);\n  };\n\n  const handleClearSearch = () => {\n    setSearchInput('');\n  };\n\n  const getFilteredTodos = () => {\n    let filteredTodos = todos;\n\n    if (selectedFilter === 'active') {\n      filteredTodos = filteredTodos.filter((todo) => !todo.completed);\n    } else if (selectedFilter === 'completed') {\n      filteredTodos = filteredTodos.filter((todo) => todo.completed);\n    }\n\n    if (searchInput.trim() !== '') {\n      filteredTodos = filteredTodos.filter((todo) => todo.title.toLowerCase().includes(searchInput.toLowerCase()));\n    }\n\n    return filteredTodos;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchInput={searchInput}\n                selectedFilter={selectedFilter}\n                onFilterChange={setSelectedFilter}\n                onSearchInputChange={handleSearchInputChange}\n                onClearSearch={handleClearSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={getFilteredTodos()}\n                    onSelect={handleTodoSelect}\n                    isSelected={selectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId !== 0 && (\n        <TodoModal\n          todos={todos}\n          todoId={selectedTodoId}\n          onClose={handleModalClosing}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}